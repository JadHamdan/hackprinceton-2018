{"version":3,"sources":["components/UsernameForm.js","ChatScreen.js","App.js","index.js"],"names":["Component","ChatScreen","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentUser","_this2","Chatkit","ChatManager","instanceLocator","userId","currentUsername","tokenProvider","TokenProvider","url","connect","then","setState","catch","error","console","styles","container","height","display","flexDirection","chatContainer","flex","whosOnlineListContainer","width","padding","backgroundColor","color","chatListContainer","react_default","a","createElement","style","App","currentScreen","onUsernameSubmitted","bind","assertThisInitialized","username","fetch","method","headers","Content-Type","body","JSON","stringify","response","src_ChatScreen","ReactDOM","render","src_App","document","getElementById"],"mappings":"0OAE2BA,2BCmEZC,cAjEX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,YAAa,IAHFR,mFAOE,IAAAS,EAAAN,KACG,IAAIO,IAAQC,YAAY,CACxCC,gBAAiB,8CACjBC,OAAQV,KAAKJ,MAAMe,gBACnBC,cAAe,IAAIL,IAAQM,cAAc,CACrCC,IAAK,yCAKRC,UACAC,KAAK,SAAAX,GACFC,EAAKW,SAAS,CAAEZ,kBAEnBa,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,QAASA,sCAI3C,IAAME,EAAS,CACXC,UAAW,CACPC,OAAQ,QACRC,QAAS,OACTC,cAAe,UAEnBC,cAAe,CACXF,QAAS,OACTG,KAAM,GAEVC,wBAAyB,CACrBC,MAAO,QACPF,KAAM,OACNG,QAAS,GACTC,gBAAiB,UACjBC,MAAO,SAEXC,kBAAmB,CACfH,QAAS,GACTD,MAAO,MACPL,QAAS,OACTC,cAAe,WAIvB,OACIS,EAAAC,EAAAC,cAAA,OAAKC,MAAOhB,EAAOC,WACfY,EAAAC,EAAAC,cAAA,OAAKC,MAAOhB,EAAOK,eACfQ,EAAAC,EAAAC,cAAA,SAAOC,MAAOhB,EAAOO,yBACjBM,EAAAC,EAAAC,cAAA,uCAEJF,EAAAC,EAAAC,cAAA,WAASC,MAAOhB,EAAOY,mBACnBC,EAAAC,EAAAC,cAAA,wCA1DC1C,aCuCV4C,cArCX,SAAAA,IAAc,IAAAzC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsC,IACVzC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwC,GAAAnC,KAAAH,QACKI,MAAQ,CACTO,gBAAiB,GACjB4B,cAAe,4BAEnB1C,EAAK2C,oBAAsB3C,EAAK2C,oBAAoBC,KAAzB3C,OAAA4C,EAAA,EAAA5C,QAAA4C,EAAA,EAAA5C,CAAAD,KANjBA,mFASM8C,GAAU,IAAArC,EAAAN,KAC1B4C,MAAM,8BAA+B,CACjCC,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEP,eAEtB3B,KAAK,SAAAmC,GACF7C,EAAKW,SAAS,CACVN,gBAAiBgC,EACjBJ,cAAe,iBAGtBrB,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,QAASA,sCASvC,OAAOe,EAAAC,EAAAC,cAACgB,EAAD,CAAYzC,gBAAiBX,KAAKI,MAAMO,yBAjCzCjB,mBCClB2D,IAASC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7d3b4cda.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass UsernameForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.onChange = this.onChange.bind(this)\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        this.props.onSubmit(this.state.username)\n    }\n\n    onChange(e) {\n        this.setState({ username: e.target.value })\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h2>What is your username?</h2>\n                    <form onSubmit={this.onSubmit}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Your full name\"\n                            onChange={this.onChange}\n                        />\n                        <input type=\"submit\" />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UsernameForm\n","import React, { Component } from 'react'\nimport Chatkit from '@pusher/chatkit-client'\n\nclass ChatScreen extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentUser: {}\n        }\n    }\n\n    componentDidMount () {\n        const chatManager = new Chatkit.ChatManager({\n            instanceLocator: 'v1:us1:3b31d86f-e2f8-4671-92e2-3a0e2d460298', // from Chatkit\n            userId: this.props.currentUsername,\n            tokenProvider: new Chatkit.TokenProvider({\n                url: 'http://localhost:3001/authenticate',\n            }),\n        })\n\n        chatManager\n            .connect()\n            .then(currentUser => {\n                this.setState({ currentUser })\n            })\n            .catch(error => console.error('error', error))\n    }\n\n    render() {\n        const styles = {\n            container: {\n                height: '100vh',\n                display: 'flex',\n                flexDirection: 'column',\n            },\n            chatContainer: {\n                display: 'flex',\n                flex: 1,\n            },\n            whosOnlineListContainer: {\n                width: '300px',\n                flex: 'none',\n                padding: 20,\n                backgroundColor: '#2c303b',\n                color: 'white'\n            },\n            chatListContainer: {\n                padding: 20,\n                width: '85%',\n                display: 'flex',\n                flexDirection: 'column',\n            },\n        }\n\n        return (\n            <div style={styles.container}>\n                <div style={styles.chatContainer}>\n                    <aside style={styles.whosOnlineListContainer}>\n                        <h2>Who's online PLACEHOLDER</h2>\n                    </aside>\n                    <section style={styles.chatListContainer}>\n                        <h2>Chat PLACEHOLDER</h2>\n                    </section>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ChatScreen\n","import React, { Component } from 'react'\nimport UsernameForm from './components/UsernameForm'\nimport ChatScreen from './ChatScreen'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            currentUsername: '',\n            currentScreen: 'WhatIsYourUsernameScreen'\n        }\n        this.onUsernameSubmitted = this.onUsernameSubmitted.bind(this)\n    }\n\n    onUsernameSubmitted(username) {\n        fetch('http://localhost:3001/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username }),\n        })\n            .then(response => {\n                this.setState({\n                    currentUsername: username,\n                    currentScreen: 'ChatScreen'\n                })\n            })\n            .catch(error => console.error('error', error))\n    }\n\n    render() {\n//        console.log(this.state.currentScreen)\n  //      if (this.state.currentScreen === 'WhatIsYourUsernameScreen') {\n    //        return <UsernameForm onSubmit={this.onUsernameSubmitted} />\n      //  }\n        //if (this.state.currentScreen === 'ChatScreen') {\n            return <ChatScreen currentUsername={this.state.currentUsername} />\n        //}\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}