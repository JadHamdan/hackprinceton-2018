{"version":3,"sources":["components/UsernameForm.js","components/MessageList.js","components/SendMessageForm.js","components/TypingIndicator.js","components/WhosOnlineList.js","ChatScreen.js","App.js","index.js"],"names":["UsernameForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","onSubmit","bind","assertThisInitialized","onChange","e","preventDefault","setState","target","value","react_default","a","createElement","type","placeholder","Component","MessageList","styles","container","overflowY","flex","ul","listStyle","li","marginTop","marginBottom","senderUsername","fontWeight","message","fontSize","style","objectSpread","messages","map","index","key","senderId","text","SendMessageForm","padding","borderTop","form","display","input","color","background","outline","border","TypingIndicator","usersWhoAreTyping","length","concat","slice","join","WhosOnlineList","users","user","id","currentUser","WhosOnlineList_WhosOnlineListItem","presenceState","name","presence","renderUsers","WhosOnlineListItem","alignItems","paddingTop","paddingBottom","div","borderRadius","width","height","marginRight","backgroundColor","children","ChatScreen","currentRoom","sendMessage","sendTypingEvent","isTypingIn","roomId","catch","error","console","_this2","Chatkit","ChatManager","instanceLocator","userId","currentUsername","tokenProvider","TokenProvider","url","connect","then","subscribeToRoom","messageLimit","hooks","onMessage","toConsumableArray","onUserStartedTyping","onUserStoppedTyping","filter","onPresenceChange","forceUpdate","onUserJoined","flexDirection","chatContainer","whosOnlineListContainer","chatListContainer","components_WhosOnlineList","components_MessageList","chatList","components_TypingIndicator","components_SendMessageForm","App","currentScreen","onUsernameSubmitted","fetch","method","headers","Content-Type","body","JSON","stringify","response","log","components_UsernameForm","src_ChatScreen","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f76da8ea.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass UsernameForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.onChange = this.onChange.bind(this)\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        this.props.onSubmit(this.state.username)\n    }\n\n    onChange(e) {\n        this.setState({ username: e.target.value })\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h2>What is your username?</h2>\n                    <form onSubmit={this.onSubmit}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Your full name\"\n                            onChange={this.onChange}\n                        />\n                        <input type=\"submit\" />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UsernameForm\n","import React, { Component } from 'react'\n\nclass MessageList extends Component {\n    render() {\n        const styles = {\n            container: {\n                overflowY: 'scroll',\n                flex: 1,\n            },\n            ul: {\n                listStyle: 'none',\n            },\n            li: {\n                marginTop: 13,\n                marginBottom: 13,\n            },\n            senderUsername: {\n                fontWeight: 'bold',\n            },\n            message: { fontSize: 15 },\n        }\n        return (\n            <div\n                style={{\n                    ...this.props.style,\n                    ...styles.container,\n                }}\n            >\n                <ul style={styles.ul}>\n                    {this.props.messages.map((message, index) => (\n                        <li key={index} style={styles.li}>\n                            <div>\n                                <span style={styles.senderUsername}>{message.senderId}</span>{' '}\n                            </div>\n                            <p style={styles.message}>{message.text}</p>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default MessageList\n","import React, { Component } from 'react'\n\nclass SendMessageForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            text: '',\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.onChange = this.onChange.bind(this)\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n        this.props.onSubmit(this.state.text)\n        this.setState({ text: '' })\n    }\n\n    onChange(e) {\n        this.setState({ text: e.target.value })\n        if (this.props.onChange) {\n            this.props.onChange()\n        }\n    }\n\n    render() {\n        const styles = {\n            container: {\n                padding: 20,\n                borderTop: '1px #4C758F solid',\n                marginBottom: 20,\n            },\n            form: {\n                display: 'flex',\n            },\n            input: {\n                color: 'inherit',\n                background: 'none',\n                outline: 'none',\n                border: 'none',\n                flex: 1,\n                fontSize: 16,\n            },\n        }\n        return (\n            <div style={styles.container}>\n                <div>\n                    <form onSubmit={this.onSubmit} style={styles.form}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Type a message here then press ENTER\"\n                            onChange={this.onChange}\n                            value={this.state.text}\n                            style={styles.input}\n                        />\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SendMessageForm\n","import React, { Component } from 'react'\n\nclass TypingIndicator extends Component {\n    render() {\n        if (this.props.usersWhoAreTyping.length > 0) {\n            return (\n                <div>\n                    {`${this.props.usersWhoAreTyping\n                        .slice(0, 2)\n                        .join(' and ')} is typing`}\n                </div>\n            )\n        }\n        return <div />\n    }\n}\n\nexport default TypingIndicator\n","import React, { Component } from 'react'\n\nclass WhosOnlineList extends Component {\n    renderUsers() {\n        return (\n            <ul>\n                {this.props.users.map((user, index) => {\n                    if (user.id === this.props.currentUser.id) {\n                        return (\n                            <WhosOnlineListItem key={index} presenceState=\"online\">\n                                {user.name} (You)\n                            </WhosOnlineListItem>\n                        )\n                    }\n                    return (\n                        <WhosOnlineListItem key={index} presenceState={user.presence.state}>\n                            {user.name}\n                        </WhosOnlineListItem>\n                    )\n                })}\n            </ul>\n        )\n    }\n\n    render() {\n        if (this.props.users) {\n            return this.renderUsers()\n        } else {\n            return <p>Loading...</p>\n        }\n    }\n}\n\nclass WhosOnlineListItem extends Component {\n    render() {\n        const styles = {\n            li: {\n                display: 'flex',\n                alignItems: 'center',\n                marginTop: 5,\n                marginBottom: 5,\n                paddingTop: 2,\n                paddingBottom: 2,\n            },\n            div: {\n                borderRadius: '50%',\n                width: 11,\n                height: 11,\n                marginRight: 10,\n            },\n        }\n        return (\n            <li style={styles.li}>\n                <div\n                    style={{\n                        ...styles.div,\n                        backgroundColor:\n                            this.props.presenceState === 'online' ? '#539eff' : '#414756',\n                    }}\n                />\n                {this.props.children}\n            </li>\n        )\n    }\n}\n\nexport default WhosOnlineList\n","import React, { Component } from 'react'\nimport Chatkit from '@pusher/chatkit-client'\nimport MessageList from './components/MessageList'\nimport SendMessageForm from './components/SendMessageForm'\nimport TypingIndicator from './components/TypingIndicator'\nimport WhosOnlineList from './components/WhosOnlineList'\n\nclass ChatScreen extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentUser: {},\n            currentRoom: {},\n            messages: [],\n            usersWhoAreTyping: [],\n        }\n        this.sendMessage = this.sendMessage.bind(this)\n        this.sendTypingEvent = this.sendTypingEvent.bind(this)\n    }\n\n    sendTypingEvent() {\n        this.state.currentUser\n            .isTypingIn({ roomId: this.state.currentRoom.id })\n            .catch(error => console.error('error', error))\n    }\n\n    sendMessage(text) {\n        this.state.currentUser.sendMessage({\n            text,\n            roomId: this.state.currentRoom.id,\n        })\n    }\n\n    componentDidMount () {\n        const chatManager = new Chatkit.ChatManager({\n            instanceLocator: 'v1:us1:3b31d86f-e2f8-4671-92e2-3a0e2d460298', // ID from Chatkit\n            userId: this.props.currentUsername,\n            tokenProvider: new Chatkit.TokenProvider({\n                url: 'http://localhost:3001/authenticate',\n            }),\n        })\n\n        chatManager\n            .connect()\n            .then(currentUser => {\n                this.setState({ currentUser })\n                return currentUser.subscribeToRoom({\n                    roomId: \"19379093\",  // Room ID from Chatkit\n                    messageLimit: 100,\n                    hooks: {\n                        onMessage: message => {\n                            this.setState({\n                                messages: [...this.state.messages, message],\n                            })\n                        },\n                        onUserStartedTyping: user => {\n                            this.setState({\n                                usersWhoAreTyping: [...this.state.usersWhoAreTyping, user.name],\n                            })\n                        },\n                        onUserStoppedTyping: user => {\n                            this.setState({\n                                usersWhoAreTyping: this.state.usersWhoAreTyping.filter(\n                                    username => username !== user.name\n                                ),\n                            })\n                        },\n                        onPresenceChange: () => this.forceUpdate(),\n                        onUserJoined: () => this.forceUpdate(),\n                    },\n                })\n            })\n            .then(currentRoom => {\n                this.setState({ currentRoom })\n            })\n            .catch(error => console.error('error', error))\n    }\n\n    render() {\n        const styles = {\n            container: {\n                height: '100vh',\n                display: 'flex',\n                flexDirection: 'column',\n            },\n            chatContainer: {\n                display: 'flex',\n                flex: 1,\n            },\n            whosOnlineListContainer: {\n                width: '300px',\n                flex: 'none',\n                padding: 20,\n                backgroundColor: '#2c303b',\n                color: 'white'\n            },\n            chatListContainer: {\n                padding: 20,\n                width: '85%',\n                display: 'flex',\n                flexDirection: 'column',\n            },\n        }\n\n        return (\n            <div style={styles.container}>\n                <div style={styles.chatContainer}>\n                    <aside style={styles.whosOnlineListContainer}>\n                        <WhosOnlineList\n                            currentUser={this.state.currentUser}\n                            users={this.state.currentRoom.users}\n                        />\n                    </aside>\n                    <section style={styles.chatListContainer}>\n                        <MessageList\n                            messages={this.state.messages}\n                            style={styles.chatList}\n                        />\n                        <TypingIndicator usersWhoAreTyping={this.state.usersWhoAreTyping} />\n                        <SendMessageForm\n                            onSubmit={this.sendMessage}\n                            onChange={this.sendTypingEvent}\n                        />\n                    </section>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ChatScreen\n","import React, { Component } from 'react'\nimport UsernameForm from './components/UsernameForm'\nimport ChatScreen from './ChatScreen'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            currentUsername: '',\n            currentScreen: 'WhatIsYourUsernameScreen'\n        }\n        this.onUsernameSubmitted = this.onUsernameSubmitted.bind(this)\n    }\n\n    onUsernameSubmitted(username) {\n        fetch('http://localhost:3001/users', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username }),\n        })\n            .then(response => {\n                this.setState({\n                    currentUsername: username,\n                    currentScreen: 'ChatScreen'\n                })\n            })\n            .catch(error => console.error('error', error))\n    }\n\n    render() {\n        console.log(this.state.currentScreen)\n        if (this.state.currentScreen === 'WhatIsYourUsernameScreen') {\n            return <UsernameForm onSubmit={this.onUsernameSubmitted} />\n        }\n        if (this.state.currentScreen === 'ChatScreen') {\n            return <ChatScreen currentUsername={this.state.currentUsername} />\n        }\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}